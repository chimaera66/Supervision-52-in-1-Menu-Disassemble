MEMORY {
    # RAM
    ZP:        start = $00,   size = $0100, type = rw, file = "";
    OAM:       start = $0200, size = $0100, type = rw, file = "";
    RAM:       start = $0300, size = $0500, type = rw, file = "";

    # ROM
    HDR:       start = $0000, size = $0010, type = ro, file = %O, fill = yes, fillval = $00;
    PRG:       start = $C000, size = $4000, type = ro, file = %O, fill = yes, fillval = $FF;
    CHR:       start = $0000, size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
}

SEGMENTS {
    ZEROPAGE:  load = ZP,  type = zp;
    OAM:       load = OAM, type = bss, align = $100;
    BSS:       load = RAM, type = bss;

    # iNES Header
    HEADER:    load = HDR, type = ro;

    GARBAGEA:  load = PRG, type = ro,  start = $C000, optional = yes;
    RESETVA:   load = PRG, type = ro,  start = $C003;
    GARBAGEB:  load = PRG, type = ro,  start = $C006, optional = yes;
    RESETVB:   load = PRG, type = ro,  start = $C017;
    GARBAGEC:  load = PRG, type = ro,  start = $C01A, optional = yes;
    RESETVC:   load = PRG, type = ro,  start = $C187;
    GARBAGED:  load = PRG, type = ro,  start = $C18A, optional = yes;
    RESETVD:   load = PRG, type = ro,  start = $C25B;
    GARBAGEE:  load = PRG, type = ro,  start = $C25E, optional = yes;
    RESETVE:   load = PRG, type = ro,  start = $C64C;
    GARBAGEF:  load = PRG, type = ro,  start = $C64F, optional = yes;
    RESETVF:   load = PRG, type = ro,  start = $C671;
    GARBAGEG:  load = PRG, type = ro,  start = $C674, optional = yes;
    RESETVG:   load = PRG, type = ro,  start = $C7A1;
    GARBAGEH:  load = PRG, type = ro,  start = $C7A4, optional = yes;
    RESETVH:   load = PRG, type = ro,  start = $CA46;
    GARBAGEI:  load = PRG, type = ro,  start = $CA49, optional = yes;
    GALAXIANA: load = PRG, type = ro,  start = $D000, optional = yes;
    CODEA:     load = PRG, type = ro,  start = $D07B;
    GARBAGEJ:  load = PRG, type = ro,  start = $D099, optional = yes;
    CODEB:     load = PRG, type = ro,  start = $D0A3;
    RODATAA:   load = PRG, type = ro,  start = $D550;
    CODEC:     load = PRG, type = ro,  start = $D969;
    RODATAB:   load = PRG, type = ro,  start = $D9F2;
    GARBAGEK:  load = PRG, type = ro,  start = $DD41, optional = yes;
    GALAXIANB: load = PRG, type = ro,  start = $E000, optional = yes;
    RESETVI:   load = PRG, type = ro,  start = $FF93, optional = yes;
    RESETVJ:   load = PRG, type = ro,  start = $FFF2;
    VECTORS:   load = PRG, type = ro,  start = $FFFA;
    TILES:     load = CHR, type = ro;
}

FILES {
    %O:        format = bin;
}